@{
	ViewData["Title"] = "First";
}

<h1>First</h1>
<button class="btn btn-dark mb-3" id="button1">Ajax開始</button>
<button class="btn btn-dark mb-3" id="button2">Ajax停止</button>
<img src="~/imgs/Circles.gif" id="loading" style="display:none" />
<div id="div1" class="alert alert-info"></div>

@section Scripts{
	<script>
		const btn = document.querySelector('#button1');
		const btnStop = document.querySelector('#button2')
		const theDiv = document.querySelector('#div1');
		const loading = document.querySelector('#loading');

		let abortController;
		btnStop.addEventListener('click',()=>{
			if (abortController) {
				abortController.abort();
			}
		})
		btn.addEventListener('click', async () => {

			try {
				loading.style.display = "inline";
				btn.setAttribute("disabled", "disabled");

				abortController = new AbortController();
				const signal = abortController.signal;

				// setTimeout(() => {
				// 	abortController.abort();
				// }, 5000);

				const response = await fetch('@Url.Content("~/api/index")', {signal});
				if (!response.ok) {
					throw new Error(response.status);
				}
				const data = await response.text();
				theDiv.innerHTML = `<h2>${data}</h2>`
			} catch (err) {
				theDiv.innerHTML = `<h2>${err}</h2>`
			} finally {
				loading.style.display = "none";
				btn.removeAttribute("disabled")
			}




			//ajax
			// console.log(fetch('/api/index'))

			//promise reslove() reject
			// fetch('/api/index')
			//     .then(response => {
			//         // console.log(response);
			//         const res = response.text();
			//         console.log(res);
			//         return res;
			//     })
			//     .then(data => {
			//         // console.log(data);
			//         theDiv.innerHTML = `<h2>${data}</h2>`;
			//     })


			// fetch('@Url.Content("~/api/index")')
			// 	.then(response => {
			// 		response.headers.forEach((value, name) => {
			// 			console.log(`${name}: ${value}`);

			// 	})
			// .then(data => {
			// 	//讀出資料 顯示資料
			// 	theDiv.innerHTML = `<h2>${data}</h2>`;
			// })
		});
	</script>
}

